---
- import_playbook: /usr/share/kolla-ansible/ansible/gather-facts.yml

- import_playbook: kolla-optimization.yml
  vars:
    kolla_action: "{{ maine_action }}"
  when:
    - kolla_action in ['deploy', 'reconfigure', 'upgrade']
    - enable_optimization | bool

- import_playbook: precheck.yml
  vars:
    kolla_action: "{{ maine_action }}"
  when: kolla_action in ['precheck']

# NOTE(mgoddard): In large environments, even tasks that are skipped can take a
# significant amount of time. This is an optimisation to prevent any tasks
# running in the subsequent plays for services that are disabled.
- name: Group hosts based on configuration
  hosts: all
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  tasks:
    - name: Group hosts based on OpenStack release
      group_by:
        key: "openstack_release_{{ openstack_release }}"

    - name: Group hosts based on Kolla action
      group_by:
        key: "kolla_action_{{ kolla_action }}"

    - name: Group hosts based on enabled services
      group_by:
        key: "{{ item }}"
      with_items:
        - enable_aodh_{{ enable_aodh | bool }}
        - enable_barbican_{{ enable_barbican | bool }}
        - enable_ceilometer_{{ enable_ceilometer | bool }}
        - enable_chrony_{{ enable_chrony | bool }}
        - enable_cinder_{{ enable_cinder | bool }}
        - enable_cloudkitty_{{ enable_cloudkitty | bool }}
        - enable_cyborg_{{ enable_cyborg | bool }}
        - enable_designate_{{ enable_designate | bool }}
        - enable_glance_{{ enable_glance | bool }}
        - enable_haproxy_{{ enable_haproxy | bool }}
        - enable_hacluster_{{ enable_hacluster | bool }}
        - enable_hawkeye_{{ enable_hawkeye | bool }}
        - enable_logging_{{ enable_logging | bool }}
        - enable_heat_{{ enable_heat | bool }}
        - enable_horizon_{{ enable_horizon | bool }}
        - enable_ironic_{{ enable_ironic | bool }}
        - enable_iscsid_{{ enable_iscsid | bool }}
        - enable_keystone_{{ enable_keystone | bool }}
        - enable_kunkka_{{ enable_kunkka | bool }}
        - enable_kuryr_{{ enable_kuryr | bool }}
        - enable_lulu_{{ enable_lulu | bool }}
        - enable_malphite_{{ enable_malphite | bool }}
        - enable_manila_{{ enable_manila | bool }}
        - enable_mariadb_{{ enable_mariadb | bool }}
        - enable_masakari_{{ enable_masakari | bool }}
        - enable_memcached_{{ enable_memcached | bool }}
        - enable_mistral_{{ enable_mistral | bool }}
        - enable_multipathd_{{ enable_multipathd | bool }}
        - enable_neutron_{{ enable_neutron | bool }}
        - enable_neutron_uplugin_agent_{{ enable_neutron_uplugin_agent | bool }}
        - enable_nova_{{ enable_nova | bool }}
        - enable_nuntius_{{ enable_nuntius | bool }}
        - enable_octavia_{{ enable_octavia | bool }}
        - enable_openvswitch_{{ enable_openvswitch | bool }}_enable_ovs_dpdk_{{ enable_ovs_dpdk | bool }}
        - enable_panko_{{ enable_panko | bool }}
        - enable_placement_{{ enable_placement | bool }}
        - enable_porsche_{{ enable_porsche | bool }}
        - enable_prometheus_{{ enable_prometheus | bool }}
        - enable_pdns_{{ enable_pdns | bool }}
        - enable_rabbitmq_{{ enable_rabbitmq | bool }}
        - enable_rally_{{ enable_rally | bool }}
        - enable_redis_{{ enable_redis | bool }}
        - enable_ryze_{{ enable_ryze | bool }}
        - enable_senlin_{{ enable_senlin | bool }}
        - enable_shadowfiend_{{ enable_shadowfiend | bool }}
        - enable_tempest_{{ enable_tempest | bool }}
        - enable_zaqar_{{ enable_zaqar | bool }}
  tags: always

- name: Apply role prechecks
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts: kolla_action_precheck
  roles:
    - role: prechecks

- name: Apply role common
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - kolla-logs
    - kolla-toolbox
    - maine-toolbox
  serial: '{{ kolla_serial|default("0") }}'
  tags:
    - common
  roles:
    - role: common
    - role: maine-common

- name: Apply role haproxy
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - haproxy
    - '&enable_haproxy_True'
  roles:
    - { role: haproxy,
        tags: haproxy,
        when: enable_haproxy | bool }
  tasks:
    - block:
        - include_role:
            name: aodh
            tasks_from: loadbalancer
          tags: aodh
          when: enable_aodh | bool
        - include_role:
            name: barbican
            tasks_from: loadbalancer
          tags: barbican
          when: enable_barbican | bool
        - include_role:
            name: cinder
            tasks_from: loadbalancer
          tags: cinder
          when: enable_cinder | bool
        - include_role:
            name: cloudkitty
            tasks_from: loadbalancer
          tags: cloudkitty
          when: enable_cloudkitty | bool
        - include_role:
            name: cyborg
            tasks_from: loadbalancer
          tags: cyborg
          when: enable_cyborg | bool
        - include_role:
            name: designate
            tasks_from: loadbalancer
          tags: designate
          when: enable_designate | bool
        - include_role:
            name: glance
            tasks_from: loadbalancer
          tags: glance
          when: enable_glance | bool
        - include_role:
            name: nuntius
            tasks_from: loadbalancer
          tags: nuntius
          when: enable_nuntius | bool
        - include_role:
            name: hawkeye
            tasks_from: loadbalancer
          tags:
            - hawkeye
            - hawkeye-prometheus
          when: enable_hawkeye | bool
        - include_role:
            name: heat
            tasks_from: loadbalancer
          tags: heat
          when: enable_heat | bool
        - include_role:
            name: horizon
            tasks_from: loadbalancer
          tags: horizon
          when: enable_horizon | bool
        - include_role:
            name: ironic
            tasks_from: loadbalancer
          tags: ironic
          when: enable_ironic | bool
        - include_role:
            name: keystone
            tasks_from: loadbalancer
          tags: keystone
          when: enable_keystone | bool
        - include_role:
            name: kunkka
            tasks_from: loadbalancer
          tags: kunkka
          when: enable_kunkka | bool
        - include_role:
            name: ryze
            tasks_from: loadbalancer
          tags: ryze
          when: enable_ryze | bool
        - include_role:
            name: logging
            tasks_from: loadbalancer
          tags:
            - logging
          when: enable_logging | bool
        - include_role:
            name: lulu
            tasks_from: loadbalancer
          tags: lulu
          when: enable_lulu | bool
        - include_role:
            name: malphite
            tasks_from: loadbalancer
          tags: malphite
          when: enable_malphite | bool
        - include_role:
            name: manila
            tasks_from: loadbalancer
          tags: manila
          when: enable_manila | bool
        - include_role:
            name: mariadb
            tasks_from: loadbalancer
          tags: mariadb
          when: enable_mariadb | bool
        - include_role:
            name: masakari
            tasks_from: loadbalancer
          tags: masakari
          when: enable_masakari | bool
        - include_role:
            name: memcached
            tasks_from: loadbalancer
          tags: memcached
          when: enable_memcached | bool
        - include_role:
            name: mistral
            tasks_from: loadbalancer
          tags: mistral
          when: enable_mistral | bool
        - include_role:
            name: neutron
            tasks_from: loadbalancer
          tags: neutron
          when: enable_neutron | bool
        - include_role:
            name: placement
            tasks_from: loadbalancer
          tags: placement
        - include_role:
            name: nova
            tasks_from: loadbalancer
          tags:
            - nova
            - nova-api
          when: enable_nova | bool
        - include_role:
            name: nova-cell
            tasks_from: loadbalancer
          tags:
            - nova
            - nova-cell
          when: enable_nova | bool
        - include_role:
            name: octavia
            tasks_from: loadbalancer
          tags: octavia
          when: enable_octavia | bool
        - include_role:
            name: panko
            tasks_from: loadbalancer
          tags: panko
          when: enable_panko | bool
        - include_role:
            name: pdns
            tasks_from: loadbalancer
          tags: pdns
          when: enable_pdns | bool
        - include_role:
            name: porsche
            tasks_from: loadbalancer
          tags: porsche
          when: enable_porsche | bool
        - include_role:
            name: prometheus
            tasks_from: loadbalancer
          tags: prometheus
          when: enable_prometheus | bool
        - include_role:
            name: rabbitmq
            tasks_from: loadbalancer
          tags: rabbitmq
          vars:
            role_rabbitmq_cluster_cookie:
            role_rabbitmq_groups:
          when: enable_rabbitmq | bool or enable_outward_rabbitmq | bool
        - include_role:
            name: senlin
            tasks_from: loadbalancer
          tags: senlin
          when: enable_senlin | bool
        - include_role:
            name: shadowfiend
            tasks_from: loadbalancer
          tags: shadowfiend
          when: enable_shadowfiend | bool
        - include_role:
            name: zaqar
            tasks_from: loadbalancer
          tags: zaqar
          when: enable_zaqar | bool
      when:
        - enable_haproxy | bool
        - kolla_action in ['deploy', 'reconfigure', 'upgrade', 'config']

- name: Apply role prechecks
  gather_facts: false
  hosts: kolla_action_precheck
  vars:
    kolla_action: "{{ maine_action }}"
  roles:
    - role: prechecks

- name: Apply role hacluster
  gather_facts: false
  hosts:
    - hacluster
    - hacluster-remote
    - '&enable_hacluster_True'
  serial: '{{ kolla_serial|default("0") }}'
  vars:
    kolla_action: "{{ maine_action }}"
  roles:
    - { role: hacluster,
        tags: hacluster,
        when: enable_hacluster | bool }

- import_playbook: hacluster-integration.yml
  vars:
    kolla_action: "{{ maine_action }}"
  when:
    - kolla_action == 'deploy'
    - enable_hacluster | bool

- name: Apply role redis
  gather_facts: false
  hosts:
    - redis
    - '&enable_redis_True'
  serial: '{{ kolla_serial|default("0") }}'
  vars:
    kolla_action: "{{ maine_action }}"
  roles:
    - { role: redis,
        tags: redis,
        when: enable_redis | bool }

- name: Apply role mariadb
  gather_facts: false
  hosts:
    - mariadb
    - '&enable_mariadb_True'
  vars:
    kolla_action: "{{ maine_action }}"
  roles:
    - { role: mariadb,
        tags: mariadb,
        when: enable_mariadb | bool and not enable_hacluster | bool }

    - { role: pcs-mariadb,
        tags: mariadb,
        when: enable_mariadb | bool and enable_hacluster | bool }

- name: Apply role memcached
  gather_facts: false
  hosts:
    - memcached
    - '&enable_memcached_True'
  serial: '{{ kolla_serial|default("0") }}'
  vars:
    kolla_action: "{{ maine_action }}"
  roles:
    - { role: memcached,
        tags: [memcache, memcached],
        when: enable_memcached | bool }

- name: Apply role iscsi
  gather_facts: false
  hosts:
    - iscsid
    - tgtd
    - '&enable_iscsid_True'
  serial: '{{ kolla_serial|default("0") }}'
  vars:
    kolla_action: "{{ maine_action }}"
  roles:
    - { role: iscsi,
        tags: iscsi,
        when: enable_iscsid | bool }

- name: Apply role multipathd
  gather_facts: false
  hosts:
    - multipathd
    - '&enable_multipathd_True'
  serial: '{{ kolla_serial|default("0") }}'
  vars:
    kolla_action: "{{ maine_action }}"
  roles:
    - { role: multipathd,
        tags: multipathd,
        when: enable_multipathd | bool }

- name: Apply role rabbitmq
  gather_facts: false
  hosts:
    - rabbitmq
    - '&enable_rabbitmq_True'
  vars:
    kolla_action: "{{ maine_action }}"
  roles:
    - { role: rabbitmq,
        tags: rabbitmq,
        role_rabbitmq_cluster_cookie: '{{ rabbitmq_cluster_cookie }}',
        role_rabbitmq_cluster_port: '{{ rabbitmq_cluster_port }}',
        role_rabbitmq_epmd_port: '{{ rabbitmq_epmd_port }}',
        role_rabbitmq_groups: rabbitmq,
        role_rabbitmq_management_port: '{{ rabbitmq_management_port }}',
        role_rabbitmq_monitoring_password: '{{ rabbitmq_monitoring_password }}',
        role_rabbitmq_monitoring_user: '{{ rabbitmq_monitoring_user }}',
        role_rabbitmq_password: '{{ rabbitmq_password }}',
        role_rabbitmq_port: '{{ rabbitmq_port }}',
        role_rabbitmq_user: '{{ rabbitmq_user }}',
        role_rabbitmq_prometheus_port: '{{ rabbitmq_prometheus_port }}',
        when: enable_rabbitmq | bool and not enable_hacluster | bool }

    - { role: pcs-rabbitmq,
        tags: rabbitmq,
        role_rabbitmq_cluster_cookie: '{{ rabbitmq_cluster_cookie }}',
        role_rabbitmq_cluster_port: '{{ rabbitmq_cluster_port }}',
        role_rabbitmq_epmd_port: '{{ rabbitmq_epmd_port }}',
        role_rabbitmq_groups: rabbitmq,
        role_rabbitmq_management_port: '{{ rabbitmq_management_port }}',
        role_rabbitmq_monitoring_password: '{{ rabbitmq_monitoring_password }}',
        role_rabbitmq_monitoring_user: '{{ rabbitmq_monitoring_user }}',
        role_rabbitmq_password: '{{ rabbitmq_password }}',
        role_rabbitmq_port: '{{ rabbitmq_port }}',
        role_rabbitmq_user: '{{ rabbitmq_user }}',
        role_rabbitmq_prometheus_port: '{{ rabbitmq_prometheus_port }}',
        when: enable_rabbitmq | bool and enable_hacluster | bool }

- name: Apply role keystone
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - keystone
    - '&enable_keystone_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - { role: keystone,
        tags: keystone,
        when: enable_keystone | bool }

- name: Apply role prometheus
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - prometheus
    - prometheus-server
    - prometheus-pushgateway
    - prometheus-pushgateway-housekeeping
    - prometheus-proxy
    - '&enable_prometheus_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - { role: prometheus,
        tags: prometheus,
        when: enable_prometheus | bool }

- name: Apply role glance
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - glance-api
    - glance-registry
    - '&enable_glance_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - { role: glance,
        tags: glance,
        when: enable_glance | bool }

- name: Apply role cinder
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - cinder-api
    - cinder-backup
    - cinder-scheduler
    - '&enable_cinder_True'
  serial:
    - 1
    - '{{ kolla_serial|default("0") }}'
  roles:
    - { role: cinder,
        tags: cinder,
        when: enable_cinder | bool }

- name: Apply role cinder volume
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - cinder-volume
    - '&enable_cinder_True'
  serial:
    - 1
    - '{{ kolla_serial|default("0") }}'
  roles:
    - { role: cinder,
        tags: cinder,
        when: enable_cinder | bool }

- name: Apply role placement
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - placement-api
    - '&enable_placement_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - { role: placement,
        tags: placement,
        when: enable_placement | bool }

# Nova deployment is more complicated than other services, so is covered in its
# own playbook.
- import_playbook: /usr/share/kolla-ansible/ansible/nova.yml
  vars:
    kolla_action: "{{ maine_action }}"

- name: Apply role openvswitch
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - openvswitch
    - '&enable_openvswitch_True_enable_ovs_dpdk_False'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - { role: openvswitch,
        tags: openvswitch,
        when: "(enable_openvswitch | bool) and not (enable_ovs_dpdk | bool)"}

- name: Apply role ovs-dpdk
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - openvswitch
    - '&enable_openvswitch_True_enable_ovs_dpdk_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - { role: ovs-dpdk,
        tags: ovs-dpdk,
        when: "(enable_openvswitch | bool) and (enable_ovs_dpdk | bool)"}

# NOTE(gmmaha): Please do not change the order listed here. The current order is a
# workaround to fix the bug https://bugs.launchpad.net/kolla/+bug/1546789
- name: Apply role neutron
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - neutron-server
    - neutron-dhcp-agent
    - neutron-l3-agent
    - neutron-lbaas-agent
    - ironic-neutron-agent
    - neutron-metadata-agent
    - neutron-metering-agent
    - compute
    - manila-share
    - '&enable_neutron_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - { role: neutron,
        tags: neutron,
        when: enable_neutron | bool }

- name: Apply role neutron-uplugin-agent
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - neutron-uplugin-agent
    - '&enable_neutron_uplugin_agent_True'
  vars_files:
    - "/usr/share/kolla-ansible/ansible/roles/neutron/defaults/main.yml"
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - role: neutron-uplugin-agent
      tags: neutron-uplugin-agent
      when: enable_neutron_uplugin_agent | bool

- name: Apply role kuryr
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - compute
    - '&enable_kuryr_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - { role: kuryr,
        tags: kuryr,
        when: enable_kuryr | bool }

- import_playbook: ironic-integration.yml
  vars:
    kolla_action: "{{ maine_action }}"
  when: kolla_action in ['deploy', 'reconfigure', 'upgrade', 'config']

- name: Apply role ironic
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - ironic-api
    - ironic-conductor
    - ironic-inspector
    - ironic-ipxe
    - ironic-pxe
    - '&enable_ironic_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - { role: ironic,
        tags: ironic,
        when: enable_ironic | bool }

- name: Apply role heat
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - heat-api
    - heat-api-cfn
    - heat-engine
    - '&enable_heat_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - { role: heat,
        tags: heat,
        when: enable_heat | bool }

- name: Apply role horizon
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - horizon
    - '&enable_horizon_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - { role: horizon,
        tags: horizon,
        when: enable_horizon | bool }

- name: Apply role mistral
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - mistral-api
    - mistral-engine
    - mistral-executor
    - '&enable_mistral_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - { role: mistral,
        tags: mistral,
        when: enable_mistral | bool }

- name: Apply role panko
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - panko-api
    - '&enable_panko_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - { role: panko,
        tags: panko,
        when: enable_panko | bool }

- name: Apply role manila
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - manila-api
    - manila-data
    - manila-share
    - manila-scheduler
    - '&enable_manila_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - { role: manila,
        tags: manila,
        when: enable_manila | bool }

- name: Apply role barbican
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - barbican-api
    - barbican-keystone-listener
    - barbican-worker
    - '&enable_barbican_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - { role: barbican,
        tags: barbican,
        when: enable_barbican | bool }

- name: Apply role pdns
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - designate-backend-pdns4
    - '&enable_pdns_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - role: pdns
      tags:
        - pdns
      when:
        - enable_pdns | bool

- name: Apply role designate
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - designate-api
    - designate-central
    - designate-producer
    - designate-mdns
    - designate-worker
    - designate-sink
    - designate-backend-bind9
    - '&enable_designate_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - { role: designate,
        tags: designate,
        when: enable_designate | bool }

- name: Apply role rally
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - rally
    - '&enable_rally_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - { role: rally,
        tags: rally,
        when: enable_rally | bool }

- name: Apply role cloudkitty
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - cloudkitty-api
    - cloudkitty-processor
    - '&enable_cloudkitty_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - { role: cloudkitty,
        tags: cloudkitty,
        when: enable_cloudkitty | bool }

- name: Apply role senlin
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - senlin-api
    - senlin-engine
    - '&enable_senlin_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - { role: senlin,
        tags: senlin,
        when: enable_senlin | bool }

- import_playbook: octavia-integration.yml
  vars:
    kolla_action: "{{ maine_action }}"
  when: kolla_action == 'deploy'

# (Note: Yaoning): Only verify server_ca here, but maybe client_ca also should be checked
- name: Check Openssl Already Configed
  hosts:
    - localhost
  serial: '{{ kolla_serial|default("0") }}'
  tasks:
    - name: check server_ca directory
      stat:
        path: "{{ node_custom_config }}/octavia/server_ca.cert.pem"
      tags: octavia
      register: octavia_server_ca

- name: Apply role octavia-certificates
  hosts:
    - localhost
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - role: octavia-certificates
      tags: octavia
      when:
        - enable_octavia | bool
        - not octavia_server_ca.stat.exists | bool

- name: Apply role octavia
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - octavia-api
    - octavia-driver-agent
    - octavia-health-manager
    - octavia-housekeeping
    - octavia-worker
    - '&enable_octavia_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - { role: octavia,
        tags: octavia,
        when: enable_octavia | bool }

- name: Apply role ceilometer
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  vars_files:
    - "/usr/share/kolla-ansible/ansible/roles/panko/defaults/main.yml"
  hosts:
    - ceilometer-central
    - ceilometer-notification
    - ceilometer-compute
    - ceilometer-ipmi
    - '&enable_ceilometer_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - { role: ceilometer,
        tags: ceilometer,
        when: enable_ceilometer | bool }

- name: Apply role aodh
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - aodh-api
    - aodh-evaluator
    - aodh-listener
    - aodh-notifier
    - '&enable_aodh_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - { role: aodh,
        tags: aodh,
        when: enable_aodh | bool }

- name: Apply role masakari
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - masakari-api
    - masakari-engine
    - masakari-instancemonitor
    - '&enable_masakari_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - role: masakari
      tags: masakari
      when:
        - enable_masakari | bool

- name: Apply role maine-masakari
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - masakari-hostmonitor
    - masakari-introspectiveinstancemonitor
    - '&enable_masakari_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - role: maine-masakari
      tags: masakari
      when:
        - enable_masakari | bool

- name: Apply role cyborg
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - cyborg-agent
    - cyborg-api
    - cyborg-conductor
    - '&enable_cyborg_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - role: cyborg
      tags:
        - cyborg
      when:
        - enable_cyborg | bool

- name: Apply role shadowfiend
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - shadowfiend-api
    - shadowfiend-processor
    - '&enable_shadowfiend_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - role: shadowfiend
      tags: shadowfiend
      when:
        - enable_shadowfiend | bool

- name: Apply role malphite
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - malphite
    - '&enable_malphite_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - role: malphite
      tags: malphite
      when:
        - enable_malphite | bool

- name: Apply role nuntius
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - nuntius
    - '&enable_nuntius_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - role: nuntius
      tags: nuntius
      when:
        - enable_nuntius | bool

- name: Apply role zaqar
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - zaqar
    - '&enable_zaqar_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - role: zaqar
      tags: zaqar
      when:
        - enable_zaqar | bool

- name: Apply role kunkka
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - kunkka
    - '&enable_kunkka_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - role: kunkka
      tags: kunkka
      when:
        - enable_kunkka | bool or enable_kunkka_ws | bool

- name: Apply role ryze
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - ryze
    - '&enable_ryze_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - role: ryze
      tags: ryze
      when:
        - enable_ryze | bool

- name: Apply role lulu
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - lulu
    - '&enable_lulu_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - role: lulu
      tags: lulu
      when:
        - enable_lulu | bool

- name: Apply role hawkeye
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - hawkeye
    - hawkeye_prometheus
    - hawkeye_alertmanager
    - hawkeye_grafana
    - hawkeye_cadvisor
    - hawkeye_node_exporter
    - hawkeye_blackbox_exporter
    - hawkeye_haproxy_exporter
    - hawkeye_memcached_exporter
    - hawkeye_mysqld_exporter
    - hawkeye_redis_exporter
    - hawkeye_docker_state_exporter
    - hawkeye_smartctl_exporter
    - hawkeye_keepalived_exporter
    - '&enable_hawkeye_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - role: hawkeye
      tags:
        - hawkeye
      when:
        - enable_hawkeye | bool

- name: Apply role logging
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - logging_elasticsearch
    - logging_elasticsearch_curator
    - logging_kibana
    - logging_fluentd
    - '&enable_logging_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - role: logging
      tags:
        - logging
      when: enable_logging | bool

- name: Apply role porsche
  gather_facts: false
  vars:
    kolla_action: "{{ maine_action }}"
  hosts:
    - porsche
    - '&enable_porsche_True'
  serial: '{{ kolla_serial|default("0") }}'
  roles:
    - role: porsche
      tags:
        - porsche
      when:
        - enable_porsche | bool

- import_playbook: post-deploy.yml
  vars:
    kolla_action: "{{ maine_action }}"
  when: kolla_action == 'deploy'
