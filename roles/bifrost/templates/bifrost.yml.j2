---
# Ironic log directory.
ironic_log_dir: "/var/log/kolla/ironic"

# Ironic inspector log directory.
inspector_log_dir: "/var/log/kolla/ironic-inspector"

# Nginx log directory.
nginx_log_dir: "/var/log/kolla/nginx"

ansible_python_interpreter: /var/lib/kolla/venv/bin/python
network_interface: "{{ bifrost_network_interface }}"

# Ironic creates hardlinks between the TFTP master image store and the
# HTTP root path when iPXE is enabled. With Docker volumes used for these
# locations we run into https://bugs.launchpad.net/ironic/+bug/1507894
# during deployment. If we use a directory under /httpboot to store the
# master images this issue is avoided.
ironic_tftp_master_path: "/tftpboot/provision_image_cache"

# Conditional variables utilized based on CI or manual testing options.
copy_from_local_path: 'False'
ci_testing_zuul: 'False'

# DHCP setting
dhcp_pool_start: "{{ dhcp_pool_start }}"
dhcp_pool_end: "{{ dhcp_pool_end }}"
dhcp_static_mask: "{{ dhcp_static_mask }}"
#FIXME(Yao Ning): Remove disable_dnsmasq_dns in stable/wallaby
#Default value becomes 'True'
disable_dnsmasq_dns: 'True'

# Settings to enable the use of inspector
enable_inspector: 'True'

# Enable inspector discovery
enable_inspector_discovery: "{{ enable_inspector_discovery | bool }}"

# Execute node introspection
inspect_nodes: 'False'
# image paras
create_image_via_dib: 'False'
create_ipa_image: 'False'
download_ipa: 'False'

enable_uefi_ipxe: 'False'
ipa_kernel_name: "{{ ipa_kernel_name }}"
ipa_initramfs_name: "{{ ipa_initramfs_name }}"

# dynamic login password
extra_kernel_options: 'nofb nomodeset vga=normal rootpwd="3pnaDNUv1Ex3g"'
inspector_extra_kernel_options: 'rootpwd="3pnaDNUv1Ex3g"'

#Note(Yao Ning): provisioned servers ip_address should be the same network with dhcp network
ipv4_subnet_mask: "{{ dhcp_static_mask }}"
#Note(Yao Ning): pxe network does not need a gateway
ipv4_gateway: "0.0.0.0"

# bifrost install
skip_install: True
skip_package_install: True
install_dib: False

user: "{{ user }}"

file_url_port: "{{ file_url_port }}"
ironic_url: "http://localhost:7385"
ironic_api_url: "http://localhost:7385"
ironic_inspector_api_url: "http://localhost:7050"
#FIXME(Yao Ning): In stable/wallaby, vars are different. change to beblow
#{% raw %}
#ironic_api_url: "{{ api_protocol }}://{{ internal_ip }}:7385"
#ironic_inspector_api_url: "{{ api_protocol }}://{{ internal_ip }}:7050"
#keystone_api_url: "{{ api_protocol }}://{{ internal_ip }}:7000/v3"
#{% endraw %}

ironic_api_url: "http://localhost:7385"
ironic_inspector_api_url: "http://localhost:7050"
#FIXME(Yao Ning): In stable/wallaby, vars are different. change to beblow
#{% raw %}
#ironic_api_url: "{{ api_protocol }}://{{ internal_ip }}:7385"
#ironic_inspector_api_url: "{{ api_protocol }}://{{ internal_ip }}:7050"
#keystone_api_url: "{{ api_protocol }}://{{ internal_ip }}:7000/v3"
#{% endraw %}

# ironic
enabled_bios_interfaces: "no-bios"
enabled_boot_interfaces: "pxe"
enabled_management_interfaces: "ipmitool"
enabled_power_interfaces: "ipmitool"
enabled_hardware_types: "ipmi"

inspector_keep_ports: "added"
cleaning: true

# ironic-inspector
inspector_port_addition: "all"
inspector_processing_hooks: "$default_processing_hooks,local_link_connection"

# firewalld
use_firewalld: false
