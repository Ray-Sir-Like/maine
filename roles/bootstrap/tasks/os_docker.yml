---
- name: Remove docker package already installed
  package:
    name: "{{ docker_pkg_removals }}"
    state: absent
  become: True

- name: Ensure docker working directory exists
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "/var/lib/docker"
    - "/etc/docker"
  become: True

- name: Setup docker insecure registries
  vars:
    registries: ["{{ docker_registry }}"]
  set_fact:
    docker_config: "{{ docker_config | combine({'insecure-registries': registries}) }}"
  when: docker_registry_insecure | bool

- name: Setup docker log driver
  vars:
  set_fact:
    docker_config: "{{ docker_config | combine({'log-driver': docker_log_driver}) }}"
  when: docker_log_driver | length > 0

- name: Setup docker storage driver
  set_fact:
    docker_config: "{{ docker_config | combine({'storage-driver': docker_storage_driver}) }}"
  when: docker_storage_driver | length > 0

- name: Setup docker runtime directory
  set_fact:
    docker_config: "{{ docker_config | combine({'data-root': docker_runtime_directory}) }}"
  when: docker_runtime_directory | length > 0

- name: Setup docker selinux
  set_fact:
    docker_config: "{{ docker_config | combine({'selinux-enabled': docker_selinux_enabled | bool}) }}"
  when: docker_selinux_enabled | length > 0

- name: Warn about docker default iptables
  debug:
    msg: >-
      Docker default iptables rules will be disabled by default from the Wallaby 12.0.0
      release. If you have any non-Kolla containers that need this functionality, you should
      plan a migration for this change, or set docker_disable_default_iptables_rules to false.
  when: not docker_disable_default_iptables_rules | bool

- name: Disable docker default iptables rules
  set_fact:
    docker_config: "{{ docker_config | combine({'iptables': false}) }}"
  when: docker_disable_default_iptables_rules | bool

- name: Warn about docker default networking
  debug:
    msg: >-
      Docker default network on docker0 will be disabled by default from the
      Wallaby 12.0.0 release. If you have any non-Kolla containers that need
      this functionality, you should plan a migration for this change, or set
      docker_disable_default_network to false.
  when: not docker_disable_default_network | bool

- name: Disable docker default network on docker0
  set_fact:
    docker_config: "{{ docker_config | combine({'bridge': 'none'}) }}"
  when: docker_disable_default_network | bool

- name: Warn about docker ip_forward
  debug:
    msg: >-
      Docker ip_forward will be disabled by default from the
      Wallaby 12.0.0 release. If you have any non-Kolla containers that need
      this functionality, you should plan a migration for this change, or set
      docker_disable_ip_forward to false.
  when: not docker_disable_ip_forward | bool

- name: Disable docker ip_forward
  set_fact:
    docker_config: "{{ docker_config | combine({'ip-forward': false}) }}"
  when: docker_disable_ip_forward | bool

- name: Merge custom docker config
  set_fact:
    docker_config: "{{ docker_config | combine(docker_custom_config) }}"

- name: Write docker config
  become: True
  copy:
    content: "{{ docker_config | to_nice_json }}"
    dest: /etc/docker/daemon.json
    mode: 0644
  register: docker_configured

- name: Create docker group
  group:
    name: docker
  become: True

- name: Create docker systemd files
  copy:
    src: "{{ item }}"
    dest: "/etc/systemd/system/{{ item }}"
    mode: "0644"
  with_items:
    - "docker.service"
    - "docker.socket"
    - "containerd.service"
  become: True

- name: Reload docker service file
  become: True
  systemd:
    name: docker
    daemon_reload: yes
  register: docker_reloaded

- name: Start and enable docker
  service:
    name: docker
    state: started
    enabled: yes
  become: True

- name: Restart docker to update configuration
  service:
    name: docker
    state: restarted
  become: True
  when: docker_configured.changed or docker_reloaded.changed

- name: Install python-docker
  package:
    name: python3-docker
    state: present
  become: True

- name: Install docker bash completion tool
  shell: >
    cp /usr/local/bin/docker-bash-completion-tool /usr/share/bash-completion/completions/docker
  become: True
