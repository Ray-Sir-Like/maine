---
- name: Ensuring config directories exist
  become: true
  file:
    path: "{{ node_config_directory }}/hawkeye/{{ item.key }}"
    state: directory
    recurse: yes
    owner: "{{ config_owner_user }}"
    group: "{{ config_owner_group }}"
    mode: "0770"
  when:
    - inventory_hostname in groups[item.value.group]
    - item.value.enabled | bool
  with_dict: "{{ hawkeye_services }}"

- name: Copying over extra CA certificates
  become: true
  copy:
    src: "{{ node_config }}/certificates/ca/"
    dest: "{{ node_config_directory }}/hawkeye/{{ item.key }}/ca-certificates"
    mode: "0644"
  when:
    - item.value.enabled | bool
    - inventory_hostname in groups[item.value.group]
    - kolla_copy_ca_into_containers | bool
  with_dict: "{{ hawkeye_services }}"
  notify:
    - "Restart {{ item.key }} container"

- name: Copying over config.json files
  become: true
  template:
    src: "{{ item.key }}.json.j2"
    dest: "{{ node_config_directory }}/hawkeye/{{ item.key }}/config.json"
  when:
    - inventory_hostname in groups[item.value.group]
    - item.value.enabled | bool
  with_dict: "{{ hawkeye_services }}"
  notify:
    - Restart {{ item.key }} container

- name: Copying over consul agent config files
  become: true
  vars:
    service: "{{ hawkeye_services['hawkeye-consul']}}"
  template:
    src: "hawkeye-consul-agent.json.j2"
    dest: "{{ node_config_directory }}/hawkeye/hawkeye-consul/hawkeye-consul-agent.json"
  when:
    - inventory_hostname in groups[service.group]
    - service.enabled | bool
  notify:
    - Restart hawkeye-consul container

- name: Copying over consul services config files
  become: true
  vars:
    service_require_consul_sd:
      - hawkeye-prometheus
      - hawkeye-blackbox-exporter
      - hawkeye-haproxy-exporter
      - hawkeye-memcached-exporter
      - hawkeye-mysqld-exporter
      - hawkeye-openstack-exporter
      - hawkeye-redis-exporter
      - hawkeye-cadvisor
      - hawkeye-node-exporter
      - hawkeye-nvidia-gpu-prometheus-exporter
      - hawkeye-docker-state-exporter
  template:
    src: "consul/{{ item.key }}.json.j2"
    dest: "{{ node_config_directory }}/hawkeye/hawkeye-consul/{{ item.key }}.json"
  when:
    - item.value.enabled | bool
    - item.key in service_require_consul_sd
    - inventory_hostname in groups[item.value.group]
    - enable_hawkeye_consul | bool
  with_dict: "{{ hawkeye_services }}"
  notify:
    - Restart hawkeye-consul container

- name: Ensure Prometheus rules directory exist
  file:
    path: "{{ node_config_directory }}/hawkeye/hawkeye-prometheus/rules"
    state: directory
    recurse: yes
    owner: "{{ config_owner_user }}"
    group: "{{ config_owner_group }}"

- name: Cleanup prometheus rules
  block:
    - shell: "ls {{ node_config_directory }}/hawkeye/hawkeye-prometheus/rules/*.yml"
      register: rules_files
      failed_when: False

    - file:
        path: "{{ item }}"
        state: "absent"
      become: true
      loop: "{{ rules_files.stdout_lines }}"

- name: Copying prometheus rules
  vars:
    service: "{{ hawkeye_services['hawkeye-prometheus'] }}"
  copy:
    src: "{{ item }}"
    dest: "{{ node_config_directory }}/hawkeye/hawkeye-prometheus/rules/"
  when:
    - inventory_hostname in groups[service.group]
    - service.enabled | bool
  with_fileglob:
    - "rules/*.yml"
  notify:
    - Restart hawkeye-prometheus container

- name: Find custom prometheus alert rules files
  vars:
    service: "{{ hawkeye_services['hawkeye-prometheus'] }}"
  become: true
  local_action:
    module: find
    path: "{{ node_custom_config }}/hawkeye/hawkeye-prometheus/rules/"
    pattern: "*.yml"
  run_once: True
  register: prometheus_alert_rules
  when:
    - service.enabled | bool

- name: Copying over custom prometheus alert rules files
  become: true
  vars:
    service_name: "hawkeye-prometheus"
    service: "{{ hawkeye_services[service_name]}}"
  copy:
    src: "{{ item.path }}"
    dest: "{{ node_config_directory }}/hawkeye/{{ service_name }}/rules/{{ item.path | basename }}"
    mode: "0660"
  when:
    - inventory_hostname in groups[service.group]
    - service.enabled | bool
    - prometheus_alert_rules is defined and prometheus_alert_rules.files | length > 0
  with_items: "{{ prometheus_alert_rules.files }}"
  notify:
    - Restart {{ service_name }} container

- name: Copying over prometheus config file
  become: true
  vars:
    service_name: "hawkeye-prometheus"
    service: "{{ hawkeye_services[service_name] }}"
  template:
    src: "{{ item }}"
    dest: "{{ node_config_directory }}/hawkeye/{{ service_name }}/prometheus.yml"
  when:
    - inventory_hostname in groups[service.group]
    - service.enabled | bool
  with_first_found:
    - "{{ node_custom_config }}/hawkeye/{{ service_name }}/{{ inventory_hostname }}/prometheus.yml.j2"
    - "{{ node_custom_config }}/hawkeye/{{ service_name }}/prometheus.yml.j2"
    - "{{ role_path }}/templates/prometheus.yml.j2"
  notify:
    - Restart {{ service_name }} container

- name: Copying over alertmanager config file
  become: true
  vars:
    service_name: "hawkeye-alertmanager"
    service: "{{ hawkeye_services[service_name] }}"
  template:
    src: "{{ item }}"
    dest: "{{ node_config_directory }}/hawkeye/{{ service_name }}/alertmanager.yml"
  when:
    - inventory_hostname in groups[service.group]
    - service.enabled | bool
  with_first_found:
    - "{{ node_custom_config }}/hawkeye/{{ service_name }}/{{ inventory_hostname }}/alertmanager.yml.j2"
    - "{{ node_custom_config }}/hawkeye/{{ service_name }}/alertmanager.yml.j2"
    - "{{ role_path }}/templates/alertmanager.yml.j2"
  notify:
    - Restart {{ service_name }} container

# grafana config
- name: Copying over grafana.ini config file
  vars:
    service_name: "hawkeye-grafana"
    service: "{{ hawkeye_services[service_name] }}"
  merge_configs:
    sources:
      - "{{ role_path }}/templates/grafana.ini.j2"
      - "{{ node_custom_config }}/hawkeye/{{ service_name }}/grafana.ini"
      - "{{ node_custom_config }}/hawkeye/{{ service_name }}/{{ inventory_hostname }}/grafana.ini"
    dest: "{{ node_config_directory }}/hawkeye/{{ service_name }}/grafana.ini"
    mode: "0660"
  become: true
  when:
    - inventory_hostname in groups[service.group]
    - service.enabled | bool
  notify:
    - Restart {{ service_name }} container

# Grafana Prometheus Datasources
- name: Copying over grafana datasources for prometheus
  become: true
  vars:
    service_name: "hawkeye-grafana"
    service: "{{ hawkeye_services[service_name]}}"
  template:
    src: "grafana_prometheus.yml.j2"
    dest: "{{ node_config_directory }}/hawkeye/{{ service_name }}/prometheus.yml"
  when:
    - inventory_hostname in groups[service.group]
    - service.enabled | bool
  notify:
    - Restart {{ service_name }} container

- name: Grafana dashboards cleanup
  block:
    - shell: "ls {{ node_config_directory }}/hawkeye/hawkeye-grafana/dashboard-*.json"
      register: dashboard_files
      failed_when: False

    - file:
        path: "{{ item }}"
        state: "absent"
      become: true
      loop: "{{ dashboard_files.stdout_lines }}"

# Grafana Dashboard Providers Definition
- name: Copying over grafana dashboards
  become: true
  vars:
    service_name: "hawkeye-grafana"
    service: "{{ hawkeye_services[service_name]}}"
  template:
    src: "grafana_dashboards.yml.j2"
    dest: "{{ node_config_directory }}/hawkeye/{{ service_name }}/dashboards.yml"
  when:
    - inventory_hostname in groups[service.group]
    - service.enabled | bool
  notify:
    - Restart {{ service_name }} container

# Grafana Infrastructure dashboards
- name: Copying over Infrastures dashboards
  become: true
  vars:
    service_name: "hawkeye-grafana"
    service: "{{ hawkeye_services[service_name]}}"
  block:
    - name: Copying over cadvisor dashboard
      copy:
        src: "dashboards/cadvisor.json"
        dest: "{{ node_config_directory }}/hawkeye/{{ service_name }}/infrastructure-cadvisor.json"
      when: enable_hawkeye_cadvisor | bool
      notify:
        - Restart {{ service_name }} container
    - name: Copying over node_exporter dashboard
      copy:
        src: "dashboards/infrastructure-node-exporter.json"
        dest: "{{ node_config_directory }}/hawkeye/{{ service_name }}/infrastructure-node-exporter.json"
      when: enable_hawkeye_node_exporter | bool
      notify:
        - Restart {{ service_name }} container
    - name: Copying over redis_exporter dashboard
      copy:
        src: "dashboards/infrastructure-redis-exporter.json"
        dest: "{{ node_config_directory }}/hawkeye/{{ service_name }}/infrastructure-redis-exporter.json"
      when: enable_hawkeye_redis_exporter | bool
      notify:
        - Restart {{ service_name }} container
    - name: Copying over haproxy_exporter dashboard
      copy:
        src: "dashboards/infrastructure-haproxy-exporter.json"
        dest: "{{ node_config_directory }}/hawkeye/{{ service_name }}/infrastructure-haproxy-exporter.json"
      when: enable_hawkeye_haproxy_exporter | bool
      notify:
        - Restart {{ service_name }} container
    - name: Copying over memcached dashboards
      copy:
        src: "dashboards/infrastructure-memcached-exporter.json"
        dest: "{{ node_config_directory }}/hawkeye/{{ service_name }}/infrastructure-memcached-exporter.json"
      when: enable_hawkeye_memcached_exporter | bool
      notify:
        - Restart {{ service_name }} container
    - name: Copying over mysqld dashboards
      copy:
        src: "dashboards/infrastructure-mysqld-exporter.json"
        dest: "{{ node_config_directory }}/hawkeye/{{ service_name }}/infrastructure-mysqld-exporter.json"
      when: enable_hawkeye_mysqld_exporter | bool
      notify:
        - Restart {{ service_name }} container
    - name: Copying over rabbitmq dashboards
      copy:
        src: "dashboards/infrastructure-rabbitmq-exporter.json"
        dest: "{{ node_config_directory }}/hawkeye/{{ service_name }}/infrastructure-rabbitmq-exporter.json"
      when: enable_hawkeye_rabbitmq_exporter | bool
    - name: Copying over prometheus dashboard
      copy:
        src: "dashboards/infrastructure-prometheus-server.json"
        dest: "{{ node_config_directory }}/hawkeye/{{ service_name }}/infrastructure-prometheus-server.json"
      when: enable_hawkeye_prometheus | bool
      notify:
        - Restart {{ service_name }} container
    - name: Copying over openstack-exporter dashboard
      copy:
        src: "dashboards/openstack-cluster.json"
        dest: "{{ node_config_directory }}/hawkeye/{{ service_name }}/openstack-cluster.json"
      when: enable_hawkeye_openstack_exporter | bool
      notify:
        - Restart {{ service_name }} container
    - name: Copying over grafana home dashboard
      become: true
      copy:
        src: "dashboards/grafana-home-dashboard.json"
        dest: "{{ node_config_directory }}/hawkeye/{{ service_name }}/grafana-home-dashboard.json"
        mode: "0660"
      notify:
        - Restart {{ service_name }} container
  when:
    - inventory_hostname in groups[service.group]
    - service.enabled | bool

# Custom dashboards
- name: Copying over Custom Grafana dasboard
  become: true
  vars:
    service_name: "hawkeye-grafana"
    service: "{{ hawkeye_services[service_name]}}"
  block:
    - name: Find custom grafana dashboard files
      local_action:
        module: find
        path: "{{ node_custom_config }}/hawkeye/{{ service_name }}/"
        pattern: "custom-*"
      run_once: True
      register: grafana_dashboard_files
    - name: Copying over custom grafana dashboard files
      copy:
        src: "{{ item.path }}"
        dest: "{{ node_config_directory }}/hawkeye/{{ service_name }}/{{ item.path | basename }}"
        mode: "0660"
      when:
        - grafana_dashboard_files is defined and grafana_dashboard_files.files | length > 0
      with_items: "{{ grafana_dashboard_files.files }}"
      notify:
        - Restart {{ service_name }} container
    - name: Check if custom grafana home dashboard exists
      local_action: "stat path={{ node_custom_config }}/hawkeye/{{ service_name }}/grafana-home-dashboard.json"
      register: grafana_custom_dashboard_file
      run_once: True
    - name: Copying custom grafana home dashboard if exists
      become: true
      template:
        src: "{{ node_custom_config }}/hawkeye/{{ service_name }}/grafana-home-dashboard.json"
        dest: "{{ node_config_directory }}/hawkeye/{{ service_name }}/grafana-home-dashboard.json"
        mode: "0660"
      when: grafana_custom_dashboard_file.stat.exists
      notify:
        - Restart {{ service_name }} container
  when:
    - inventory_hostname in groups[service.group]
    - service.enabled | bool

- name: Deprecated old grafana config directory
  become: true
  file:
    path: "{{ node_config_directory }}/grafana"
    state: absent

- name: Copying over blackbox_exporter config file
  become: true
  vars:
    service_name: "hawkeye-blackbox-exporter"
    service: "{{ hawkeye_services[service_name] }}"
  template:
    src: "{{ item }}"
    dest: "{{ node_config_directory }}/hawkeye/{{ service_name }}/blackbox_exporter.yml"
  when:
    - inventory_hostname in groups[service.group]
    - service.enabled | bool
  with_first_found:
    - "{{ node_custom_config }}/hawkeye/{{ service_name }}/{{ inventory_hostname }}/blackbox_exporter.yml.j2"
    - "{{ node_custom_config }}/hawkeye/{{ service_name }}/blackbox_exporter.yml.j2"
    - "{{ role_path }}/templates/blackbox_exporter.yml.j2"
  notify:
    - Restart {{ service_name }} container

- name: Copying over my.cnf for mysqld_exporter
  vars:
    service_name: "hawkeye-mysqld-exporter"
    service: "{{ hawkeye_services[service_name] }}"
  merge_configs:
    sources:
      - "{{ node_custom_config }}/hawkeye/{{ service_name }}/{{ inventory_hostname }}/mysqld_exporter.cnf"
      - "{{ node_custom_config }}/hawkeye/{{ service_name }}/mysqld_exporter.cnf"
      - "{{ role_path }}/templates/mysqld_exporter.cnf.j2"
    dest: "{{ node_config_directory }}/hawkeye/{{ service_name }}/my.cnf"
  when:
    - inventory_hostname in groups[service.group]
    - service.enabled | bool
  notify:
    - Restart {{ service_name }} container

- name: Cleanup legacy config files
  become: true
  file:
    path: "{{ node_config_directory }}/hawkeye/{{ item }}"
    state: absent
  loop: "{{ deprecated_hawkeye_services }}"

- name: Copying cloud config file for openstack exporter
  become: true
  vars:
    service_name: "hawkeye-openstack-exporter"
    service: "{{ hawkeye_services[service_name] }}"
  template:
    src: "{{ item }}"
    dest: "{{ node_config_directory }}/hawkeye/{{ service_name }}/clouds.yml"
    mode: "0660"
  when:
    - inventory_hostname in groups[service.group]
    - service.enabled | bool
  with_first_found:
    - "{{ node_custom_config }}/hawkeye/{{ service_name }}/{{ inventory_hostname }}/clouds.yml"
    - "{{ node_custom_config }}/hawkeye/{{ service_name }}/clouds.yml"
    - "{{ role_path }}/templates/clouds.yml.j2"
  notify:
    - Restart {{ service_name }} container
