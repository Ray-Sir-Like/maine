---
- name: Restart hawkeye-consul container
  vars:
    service_name: "hawkeye-consul"
    service: "{{ hawkeye_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    environment:
      CONSUL_HTTP_ADDR: "{{ monitoring_interface_address }}:{{ hawkeye_consul_port }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart hawkeye-prometheus container
  vars:
    service_name: "hawkeye-prometheus"
    service: "{{ hawkeye_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart hawkeye-alertmanager container
  vars:
    service_name: "hawkeye-alertmanager"
    service: "{{ hawkeye_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart hawkeye-grafana container
  become: true
  vars:
    service_name: "hawkeye-grafana"
    service: "{{ hawkeye_services[service_name] }}"
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart hawkeye-blackbox-exporter container
  vars:
    service_name: "hawkeye-blackbox-exporter"
    service: "{{ hawkeye_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart hawkeye-haproxy-exporter container
  vars:
    service_name: "hawkeye-haproxy-exporter"
    service: "{{ hawkeye_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart hawkeye-memcached-exporter container
  vars:
    service_name: "hawkeye-memcached-exporter"
    service: "{{ hawkeye_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart hawkeye-mysqld-exporter container
  vars:
    service_name: "hawkeye-mysqld-exporter"
    service: "{{ hawkeye_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart hawkeye-openstack-exporter container
  vars:
    service_name: "hawkeye-openstack-exporter"
    service: "{{ hawkeye_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart hawkeye-redis-exporter container
  vars:
    service_name: "hawkeye-redis-exporter"
    service: "{{ hawkeye_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"
    - inventory_hostname in groups[service.group]
    - service.enabled | bool

- name: Restart hawkeye-cadvisor container
  vars:
    service_name: "hawkeye-cadvisor"
    service: "{{ hawkeye_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    privileged: "{{ service.privileged | default(False) }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart hawkeye-node-exporter container
  vars:
    service_name: "hawkeye-node-exporter"
    service: "{{ hawkeye_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    cap_add:
      - "SYS_TIME"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    privileged: "{{ service.privileged | default(False) }}"
    ipc_mode: "{{ service.ipc_mode | default('') }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart hawkeye-nvidia-gpu-prometheus-exporter container
  vars:
    service_name: "hawkeye-nvidia-gpu-prometheus-exporter"
    service: "{{ hawkeye_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    privileged: "{{ service.privileged | default(False) }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart hawkeye-docker-state-exporter container
  vars:
    service_name: "hawkeye-docker-state-exporter"
    service: "{{ hawkeye_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    privileged: "{{ service.privileged | default(False) }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart hawkeye-smartctl-exporter container
  vars:
    service_name: "hawkeye-smartctl-exporter"
    service: "{{ hawkeye_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    privileged: "{{ service.privileged | default(False) }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"

- name: Restart hawkeye-keepalived-exporter container
  vars:
    service_name: "hawkeye-keepalived-exporter"
    service: "{{ hawkeye_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    environment:
      DOCKER_API_VERSION: 1.41
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"
